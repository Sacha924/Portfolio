@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}

:root {
  --card-height: 62vh;
  --card-width: calc(var(--card-height) / 1.5);
}

.card {
  background: #191c29;
  width: var(--card-width);
  height: var(--card-height);
  padding: 3px;
  position: relative;
  border-radius: 6px;
  justify-content: center;
  align-items: center;
  text-align: center;
  display: flex;
  font-size: 1.2em;
  color: rgb(88 199 250 / 30%);
  cursor: pointer;
  font-family: cursive;
  margin-right: 100px;
  margin-left: 100px;
  transition: color 1s;
}

.card:hover {
  color: rgb(88 199 250 / 100%);
  transition: color 2s;
  /* filter: brightness(100%); */
}
.card:hover:before,
.card:hover:after {
  animation: none;
  opacity: 0;
}

.card::before {
  content: "";
  width: 104%;
  height: 102%;
  border-radius: 8px;
  background-image: linear-gradient(var(--rotate), #5ddcff, #3c67e3 43%, #4e00c2);
  position: absolute;
  z-index: -1;
  top: -1%;
  left: -2%;
  animation: spin 2.5s linear infinite;
}

.card::after {
  position: absolute;
  content: "";
  top: calc(var(--card-height) / 6);
  left: 0;
  right: 0;
  z-index: -1;
  height: 100%;
  width: 100%;
  margin: 0 auto;
  transform: scale(0.8);
  filter: blur(calc(var(--card-height) / 6));
  background-image: linear-gradient(var(--rotate), #5ddcff, #3c67e3 43%, #4e00c2);
  opacity: 1;
  transition: opacity 0.5s;
  animation: spin 2.5s linear infinite;
}

@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}

.imageInCard {
  /* width: 60%;
  height: 60%; */
  width: calc(var(--card-height) / 1.7);
  height: calc(var(--card-height) / 1.7);
  filter: brightness(60%);
  transition: filter 2s;
}
.card:hover .imageInCard {
  filter: brightness(100%);
}
.card.rotated {
  animation: none; /* overrides the animation on the card::before and card::after elements */
  filter: brightness(100%); /* overrides the filter on the imageInCard element */
  transform: scale(3, 1.3) rotate(360deg);
  --card-scale: 1.8;
  transition: transform 1.2s ease, margin 1.5s ease-in-out;
  margin: 80px 430px 50px 430px;
}
.card.reverse {
  animation: none;
  transform: scale(1) rotate(0deg);
  transition: transform 1.5s ease, margin 1.5s ease-in-out;
}
.card.reverse::before {
  /* animation: spin 5s linear infinite;
  background-image: linear-gradient(var(--rotate), black 90%, white); */
  background: black;
}
.card.reverse::after {
  /* animation: spin 5s linear infinite;
  background-image: linear-gradient(var(--rotate), black 90%, white); */
  background: black;
}

.easterEgg {
  opacity: 0;
  padding: 5% 5% 5% 0%;
}
/* .cardBottomRow {
  color: red;
  display: flex;
  flex-direction: row;
  justify-content: end;
  align-items: space-between;
  position: absolute;
  bottom: 0px;
  right: 7%;
  filter: brightness(60%);
  transition: filter 2s;
} */

.traductForm {
  position: absolute;
  bottom: 2%;
  left: 7%;
}
.traductForm form {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.traductForm input {
  width: 40px;
  font-size: 7px;
}
.traductButton {
  background-color: #1d3f5e;
  color: white;
  margin-top: 2px;
  padding: 5px 5px;
  border-radius: 5px;
  text-decoration: none;
  font-weight: bold;
  box-shadow: 0px 5px 10px #888888;
  transition: all 0.4s ease-in-out;
}
.traductButton:hover {
  background-color: #3e738e;
  cursor: pointer;
}

.skills {
  color: red;
  display: flex;
  flex-direction: row;
  justify-content: end;
  position: absolute;
  bottom: 0px;
  right: 7%;
  filter: brightness(60%);
  transition: filter 2s;
}
.skill {
  padding-left: 30px;
  color: #fff;
  padding: 5px 10px;
  border-radius: 20px;
  font-size: 14px;
  margin-right: 10px;
  margin-bottom: 10px;
  display: inline-block;
  font-weight: bold;
  text-align: center;
  brightness: 60%;
}

.card:hover .skills {
  filter: brightness(100%);
}
.skill[data-skill="Solidity"] {
  background: #5da5da;
}
.skill[data-skill="Python"] {
  background: #3572a5;
}
.skill[data-skill="C#"] {
  background: #178600;
}
.skill[data-skill="Bash"] {
  background: #333333;
}
.skill[data-skill="PHP"] {
  background: #4f5d95;
}
.skill[data-skill="AI"] {
  background: #0077c8;
}
.skill[data-skill="Next.Js"] {
  background: #444444;
}
.skill[data-skill="SQLite"] {
  background: purple;
}
.skill[data-skill="Chainlink VRF"] {
  background: #162447;
}
.skill:not([data-skill="Solidity"]):not([data-skill="Python"]):not([data-skill="C#"]):not([data-skill="Bash"]):not([data-skill="PHP"]):not([data-skill="AI"]):not([data-skill="Next.Js"]):not([data-skill="SQLite"]):not([data-skill="SQLite"]):not([data-skill="Chainlink VRF"]) {
  background: blue;
}

.rotated-container {
  width: calc(--card-width * 3); /* The text is inside the card, so because we have raised the width of the card to 3, we need the "*3" here*/
  height: 65vh;
  display: flex;
  flex-direction: column;
  word-wrap: break-word;
}
.rotated-container h1 {
  color: rgb(88 199 250 / 100%);

  margin: 2% 2% 20% 2%;
}
.rotated-container h2 {
  margin: 7% 0% 7% 0%;
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-decoration-skip: spaces;
  text-decoration-skip-ink: auto;
}
/* p,
h1,
div {
  font-family: "Arial";
} */
.rotated-container .projectDescription {
  width: 350px;
  display: block;
  margin: 0 auto;
  font-size: calc(1rem * 1 / var(--card-scale));
  font-weight: bold;
  color: #fff;
  padding: 0;
  margin-top: 10px;
  margin-bottom: 10px;
  word-wrap: break-word;
  text-align: center;
}

/* .card.rotated::before,
.card.rotated::before {
  width: calc(--card-width * 3);
  background: black;
  animation: none;
} */

.card.rotated::before,
.card.rotated::after {
  animation: none;
  background: black;
}

.myFrame {
  width: 95%;
  height: 95%;
  border: 2px solid #1d3f5e;
  border-radius: 30px;
  position: absolute;
  top: 2.5%;
  left: 2.5%;
  right: 0;
  bottom: 0;
  z-index: 2;
}
.exitButton {
  width: 5%;
  height: 5%;
  position: absolute;
  bottom: 6.2%;
  right: 3.4%;
  z-index: 3;
  background-color: #1d3f5e;
  color: white;
  padding: 5px 5px;
  border-radius: 5px;
  text-decoration: none;
  font-weight: bold;
  box-shadow: 0px 5px 10px #888888;
  transition: all 0.4s ease-in-out;
}
.exitButton:hover {
  background-color: #3e738e;
  transform: translateY(-4px);
  cursor: pointer;
}
